#version 450

layout(binding = 0, rgba16f) uniform writeonly image2D image0;
layout(binding = 1) uniform sampler2D inputImage;

layout(push_constant) uniform PushConstants {
    vec4 data1;
    vec4 data2;
    vec4 data3;
    vec4 data4;
} pc;

// Workgroup size
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main()
{
	uvec2 texelCoord = gl_GlobalInvocationID.xy;
	ivec2 size = imageSize(image0);
	if (texelCoord.x >= uint(size.x) || texelCoord.y >= uint(size.y)) return;

	vec2 uv = vec2(texelCoord) / vec2(size);

	vec4 color = texture(inputImage, uv);

	// Apply brightness adjustment using pc.data1.x
	color.rgb *= pc.data1.x;
	color.rgb = clamp(color.rgb, 0.f, 1.f);
	color.rgb = pow(color.rgb, vec3(0.8f)); // makes shadows darker, highlights pop

	float gray = dot(color.rgb, vec3(0.299f, 0.587f, 0.114f));
	color.rgb = mix(vec3(gray), color.rgb, pc.data1.y); // y = saturation [0–1]

	color.rgb = (color.rgb - 0.5f) * pc.data1.z + 0.5f; // z = contrast multiplier

	imageStore(image0, ivec2(texelCoord), color);
}