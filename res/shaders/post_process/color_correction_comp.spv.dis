; SPIR-V
; Version: 1.6
; Generator: Khronos Glslang Reference Front End; 11
; Bound: 177
; Schema: 0
               OpCapability Shader
               OpCapability ImageQuery
               OpCapability ShaderNonUniform
               OpCapability RuntimeDescriptorArray
               OpCapability SampledImageArrayNonUniformIndexing
               OpCapability StorageImageArrayNonUniformIndexing
          %2 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %gl_GlobalInvocationID %storageImages %pc %combinedSamplers
               OpExecutionMode %main LocalSize 16 16 1
          %1 = OpString "C:\\Users\\Justi\\source\\repos\\VulkanRenderer\\VulkanRenderer\\res\\shaders\\post_process\\color_correction_comp.comp"
               OpSource GLSL 450 %1 "#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_nonuniform_qualifier : require

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 3, rgba16f) uniform writeonly image2D storageImages[];
layout(set = 0, binding = 4) uniform sampler2D combinedSamplers[];

layout(push_constant) uniform PC {
    float brightness;
    float saturation;
    float contrast;
    float pad0;
    uint cmbViewIdx;
    uint sampledViewIdx;
    uint pad1[2];
} pc;

vec3 toneMapFilmicUnreal(vec3 x) {
    const float A = 0.15;
    const float B = 0.50;
    const float C = 0.10;
    const float D = 0.20;
    const float E = 0.02;
    const float F = 0.30;
    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F)) - E/F;
}

vec3 toneMap(vec3 color) {
    color = toneMapFilmicUnreal(color * pc.brightness);
    color = clamp(color / toneMapFilmicUnreal(vec3(11.2)), 0.0, 1.0);
    return color;
}

void main() {
    uvec2 texelCoord = gl_GlobalInvocationID.xy;

    ivec2 size = imageSize(storageImages[nonuniformEXT(pc.sampledViewIdx)]);
    if (texelCoord.x >= uint(size.x) || texelCoord.y >= uint(size.y)) return;

    vec2 uv = vec2(texelCoord) / vec2(size);

    vec4 color = texture(combinedSamplers[nonuniformEXT(pc.cmbViewIdx)], uv);

    color.rgb *= pc.brightness;
    color.rgb = clamp(color.rgb, 0.0, 1.0);
    color.rgb = pow(color.rgb, vec3(0.8)); // Adjust tone

    float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));
    color.rgb = mix(vec3(gray), color.rgb, pc.saturation);

    color.rgb = (color.rgb - 0.5) * pc.contrast + 0.5;

    //color.rgb = toneMap(color.rgb);

    imageStore(storageImages[nonuniformEXT(pc.sampledViewIdx)], ivec2(texelCoord), color);
}"
               OpSourceExtension "GL_ARB_separate_shader_objects"
               OpSourceExtension "GL_EXT_nonuniform_qualifier"
               OpName %main "main"
               OpName %texelCoord "texelCoord"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %size "size"
               OpName %storageImages "storageImages"
               OpName %PC "PC"
               OpMemberName %PC 0 "brightness"
               OpMemberName %PC 1 "saturation"
               OpMemberName %PC 2 "contrast"
               OpMemberName %PC 3 "pad0"
               OpMemberName %PC 4 "cmbViewIdx"
               OpMemberName %PC 5 "sampledViewIdx"
               OpMemberName %PC 6 "pad1"
               OpName %pc "pc"
               OpName %uv "uv"
               OpName %color "color"
               OpName %combinedSamplers "combinedSamplers"
               OpName %gray "gray"
               OpModuleProcessed "client vulkan100"
               OpModuleProcessed "target-env spirv1.6"
               OpModuleProcessed "target-env vulkan1.4"
               OpModuleProcessed "entry-point main"
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %storageImages NonReadable
               OpDecorate %storageImages Binding 3
               OpDecorate %storageImages DescriptorSet 0
               OpDecorate %_arr_uint_uint_2 ArrayStride 4
               OpDecorate %PC Block
               OpMemberDecorate %PC 0 Offset 0
               OpMemberDecorate %PC 1 Offset 4
               OpMemberDecorate %PC 2 Offset 8
               OpMemberDecorate %PC 3 Offset 12
               OpMemberDecorate %PC 4 Offset 16
               OpMemberDecorate %PC 5 Offset 20
               OpMemberDecorate %PC 6 Offset 24
               OpDecorate %34 NonUniform
               OpDecorate %36 NonUniform
               OpDecorate %37 NonUniform
               OpDecorate %combinedSamplers Binding 4
               OpDecorate %combinedSamplers DescriptorSet 0
               OpDecorate %82 NonUniform
               OpDecorate %84 NonUniform
               OpDecorate %85 NonUniform
               OpDecorate %169 NonUniform
               OpDecorate %170 NonUniform
               OpDecorate %171 NonUniform
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %float = OpTypeFloat 32
         %21 = OpTypeImage %float 2D 0 0 0 2 Rgba16f
%_runtimearr_21 = OpTypeRuntimeArray %21
%_ptr_UniformConstant__runtimearr_21 = OpTypePointer UniformConstant %_runtimearr_21
%storageImages = OpVariable %_ptr_UniformConstant__runtimearr_21 UniformConstant
     %uint_2 = OpConstant %uint 2
%_arr_uint_uint_2 = OpTypeArray %uint %uint_2
         %PC = OpTypeStruct %float %float %float %float %uint %uint %_arr_uint_uint_2
%_ptr_PushConstant_PC = OpTypePointer PushConstant %PC
         %pc = OpVariable %_ptr_PushConstant_PC PushConstant
      %int_5 = OpConstant %int 5
%_ptr_PushConstant_uint = OpTypePointer PushConstant %uint
%_ptr_UniformConstant_21 = OpTypePointer UniformConstant %21
       %bool = OpTypeBool
     %uint_0 = OpConstant %uint 0
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Function_int = OpTypePointer Function %int
     %uint_1 = OpConstant %uint 1
    %v2float = OpTypeVector %float 2
%_ptr_Function_v2float = OpTypePointer Function %v2float
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %74 = OpTypeImage %float 2D 0 0 0 1 Unknown
         %75 = OpTypeSampledImage %74
%_runtimearr_75 = OpTypeRuntimeArray %75
%_ptr_UniformConstant__runtimearr_75 = OpTypePointer UniformConstant %_runtimearr_75
%combinedSamplers = OpVariable %_ptr_UniformConstant__runtimearr_75 UniformConstant
      %int_4 = OpConstant %int 4
%_ptr_UniformConstant_75 = OpTypePointer UniformConstant %75
    %float_0 = OpConstant %float 0
      %int_0 = OpConstant %int 0
%_ptr_PushConstant_float = OpTypePointer PushConstant %float
    %v3float = OpTypeVector %float 3
%_ptr_Function_float = OpTypePointer Function %float
    %float_1 = OpConstant %float 1
%float_0_800000012 = OpConstant %float 0.800000012
        %119 = OpConstantComposite %v3float %float_0_800000012 %float_0_800000012 %float_0_800000012
%float_0_298999995 = OpConstant %float 0.298999995
%float_0_587000012 = OpConstant %float 0.587000012
%float_0_114 = OpConstant %float 0.114
        %133 = OpConstantComposite %v3float %float_0_298999995 %float_0_587000012 %float_0_114
      %int_1 = OpConstant %int 1
  %float_0_5 = OpConstant %float 0.5
      %int_2 = OpConstant %int 2
    %uint_16 = OpConstant %uint 16
        %176 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_1
               OpLine %1 37 11
       %main = OpFunction %void None %4
          %6 = OpLabel
 %texelCoord = OpVariable %_ptr_Function_v2uint Function
       %size = OpVariable %_ptr_Function_v2int Function
         %uv = OpVariable %_ptr_Function_v2float Function
      %color = OpVariable %_ptr_Function_v4float Function
       %gray = OpVariable %_ptr_Function_float Function
               OpLine %1 38 0
         %14 = OpLoad %v3uint %gl_GlobalInvocationID
         %15 = OpVectorShuffle %v2uint %14 %14 0 1
               OpStore %texelCoord %15
               OpLine %1 40 0
         %32 = OpAccessChain %_ptr_PushConstant_uint %pc %int_5
         %33 = OpLoad %uint %32
         %34 = OpCopyObject %uint %33
         %36 = OpAccessChain %_ptr_UniformConstant_21 %storageImages %34
         %37 = OpLoad %21 %36
         %38 = OpImageQuerySize %v2int %37
               OpStore %size %38
               OpLine %1 41 0
         %42 = OpAccessChain %_ptr_Function_uint %texelCoord %uint_0
         %43 = OpLoad %uint %42
         %45 = OpAccessChain %_ptr_Function_int %size %uint_0
         %46 = OpLoad %int %45
         %47 = OpBitcast %uint %46
         %48 = OpUGreaterThanEqual %bool %43 %47
         %49 = OpLogicalNot %bool %48
               OpSelectionMerge %51 None
               OpBranchConditional %49 %50 %51
         %50 = OpLabel
               OpLine %1 41 0
         %53 = OpAccessChain %_ptr_Function_uint %texelCoord %uint_1
         %54 = OpLoad %uint %53
         %55 = OpAccessChain %_ptr_Function_int %size %uint_1
         %56 = OpLoad %int %55
         %57 = OpBitcast %uint %56
         %58 = OpUGreaterThanEqual %bool %54 %57
               OpBranch %51
         %51 = OpLabel
         %59 = OpPhi %bool %48 %6 %58 %50
               OpLine %1 41 0
               OpSelectionMerge %61 None
               OpBranchConditional %59 %60 %61
         %60 = OpLabel
               OpLine %1 41 0
               OpReturn
         %61 = OpLabel
               OpLine %1 43 0
         %66 = OpLoad %v2uint %texelCoord
         %67 = OpConvertUToF %v2float %66
         %68 = OpLoad %v2int %size
         %69 = OpConvertSToF %v2float %68
         %70 = OpFDiv %v2float %67 %69
               OpStore %uv %70
               OpLine %1 45 0
         %80 = OpAccessChain %_ptr_PushConstant_uint %pc %int_4
         %81 = OpLoad %uint %80
         %82 = OpCopyObject %uint %81
         %84 = OpAccessChain %_ptr_UniformConstant_75 %combinedSamplers %82
         %85 = OpLoad %75 %84
         %86 = OpLoad %v2float %uv
         %88 = OpImageSampleExplicitLod %v4float %85 %86 Lod %float_0
               OpStore %color %88
               OpLine %1 47 0
         %91 = OpAccessChain %_ptr_PushConstant_float %pc %int_0
         %92 = OpLoad %float %91
         %94 = OpLoad %v4float %color
         %95 = OpVectorShuffle %v3float %94 %94 0 1 2
         %96 = OpVectorTimesScalar %v3float %95 %92
         %98 = OpAccessChain %_ptr_Function_float %color %uint_0
         %99 = OpCompositeExtract %float %96 0
               OpStore %98 %99
        %100 = OpAccessChain %_ptr_Function_float %color %uint_1
        %101 = OpCompositeExtract %float %96 1
               OpStore %100 %101
        %102 = OpAccessChain %_ptr_Function_float %color %uint_2
        %103 = OpCompositeExtract %float %96 2
               OpStore %102 %103
               OpLine %1 48 0
        %104 = OpLoad %v4float %color
        %105 = OpVectorShuffle %v3float %104 %104 0 1 2
        %107 = OpCompositeConstruct %v3float %float_0 %float_0 %float_0
        %108 = OpCompositeConstruct %v3float %float_1 %float_1 %float_1
        %109 = OpExtInst %v3float %2 FClamp %105 %107 %108
        %110 = OpAccessChain %_ptr_Function_float %color %uint_0
        %111 = OpCompositeExtract %float %109 0
               OpStore %110 %111
        %112 = OpAccessChain %_ptr_Function_float %color %uint_1
        %113 = OpCompositeExtract %float %109 1
               OpStore %112 %113
        %114 = OpAccessChain %_ptr_Function_float %color %uint_2
        %115 = OpCompositeExtract %float %109 2
               OpStore %114 %115
               OpLine %1 49 0
        %116 = OpLoad %v4float %color
        %117 = OpVectorShuffle %v3float %116 %116 0 1 2
        %120 = OpExtInst %v3float %2 Pow %117 %119
        %121 = OpAccessChain %_ptr_Function_float %color %uint_0
        %122 = OpCompositeExtract %float %120 0
               OpStore %121 %122
        %123 = OpAccessChain %_ptr_Function_float %color %uint_1
        %124 = OpCompositeExtract %float %120 1
               OpStore %123 %124
        %125 = OpAccessChain %_ptr_Function_float %color %uint_2
        %126 = OpCompositeExtract %float %120 2
               OpStore %125 %126
               OpLine %1 51 0
        %128 = OpLoad %v4float %color
        %129 = OpVectorShuffle %v3float %128 %128 0 1 2
        %134 = OpDot %float %129 %133
               OpStore %gray %134
               OpLine %1 52 0
        %135 = OpLoad %float %gray
        %136 = OpCompositeConstruct %v3float %135 %135 %135
        %137 = OpLoad %v4float %color
        %138 = OpVectorShuffle %v3float %137 %137 0 1 2
        %140 = OpAccessChain %_ptr_PushConstant_float %pc %int_1
        %141 = OpLoad %float %140
        %142 = OpCompositeConstruct %v3float %141 %141 %141
        %143 = OpExtInst %v3float %2 FMix %136 %138 %142
        %144 = OpAccessChain %_ptr_Function_float %color %uint_0
        %145 = OpCompositeExtract %float %143 0
               OpStore %144 %145
        %146 = OpAccessChain %_ptr_Function_float %color %uint_1
        %147 = OpCompositeExtract %float %143 1
               OpStore %146 %147
        %148 = OpAccessChain %_ptr_Function_float %color %uint_2
        %149 = OpCompositeExtract %float %143 2
               OpStore %148 %149
               OpLine %1 54 0
        %150 = OpLoad %v4float %color
        %151 = OpVectorShuffle %v3float %150 %150 0 1 2
        %153 = OpCompositeConstruct %v3float %float_0_5 %float_0_5 %float_0_5
        %154 = OpFSub %v3float %151 %153
        %156 = OpAccessChain %_ptr_PushConstant_float %pc %int_2
        %157 = OpLoad %float %156
        %158 = OpVectorTimesScalar %v3float %154 %157
        %159 = OpCompositeConstruct %v3float %float_0_5 %float_0_5 %float_0_5
        %160 = OpFAdd %v3float %158 %159
        %161 = OpAccessChain %_ptr_Function_float %color %uint_0
        %162 = OpCompositeExtract %float %160 0
               OpStore %161 %162
        %163 = OpAccessChain %_ptr_Function_float %color %uint_1
        %164 = OpCompositeExtract %float %160 1
               OpStore %163 %164
        %165 = OpAccessChain %_ptr_Function_float %color %uint_2
        %166 = OpCompositeExtract %float %160 2
               OpStore %165 %166
               OpLine %1 58 0
        %167 = OpAccessChain %_ptr_PushConstant_uint %pc %int_5
        %168 = OpLoad %uint %167
        %169 = OpCopyObject %uint %168
        %170 = OpAccessChain %_ptr_UniformConstant_21 %storageImages %169
        %171 = OpLoad %21 %170
        %172 = OpLoad %v2uint %texelCoord
        %173 = OpBitcast %v2int %172
        %174 = OpLoad %v4float %color
               OpImageWrite %171 %173 %174
               OpLine %1 59 0
               OpReturn
               OpFunctionEnd
