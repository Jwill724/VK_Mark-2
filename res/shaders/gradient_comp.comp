#version 450

layout(binding = 0, rgba16f) uniform writeonly image2D image0;
layout(binding = 1) uniform sampler2D inputImage;

layout(push_constant) uniform PushConstants {
    vec4 data1;
    vec4 data2;
    vec4 data3;
    vec4 data4;
} pc;

// Workgroup size
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main() {
    uvec2 texelCoord = gl_GlobalInvocationID.xy;

    ivec2 size = imageSize(image0);
    if (texelCoord.x >= uint(size.x) || texelCoord.y >= uint(size.y)) {
        return;
    }

    vec4 topColor = pc.data1;
    vec4 bottomColor = pc.data2;

    vec2 uv = vec2(texelCoord) / vec2(size);

    vec4 gradient = mix(topColor, bottomColor, uv.y);
    vec4 geometry = textureLod(inputImage, uv, 0.0);

    float alpha = clamp(geometry.a + length(geometry.rgb), 0.0, 1.0);
    vec4 result = mix(gradient, geometry, alpha);

    imageStore(image0, ivec2(texelCoord), result);
}